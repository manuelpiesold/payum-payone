{% extends layout ?: "@PayumCore/layout.html.twig" %}

{% block payum_stylesheets %}
    {{ parent() }}

    <style type="text/css" media="screen, projection"> * {
            margin: 0;
            padding: 0;
        }

        body {
            background: #FFF;
            color: #000;
            font: 0.9em "Helvetica";
        }

        fieldset {
            padding: 1em;
            border: 1px solid #000;
            width: 275px;
            margin: 10px;
        }

        label {
            margin-right: 10px;
            float: left;
            width: 80px;
            padding-top: 0.3em;
            text-align: right;
        }

        input, select {
            font-size: 1em;
            border: 1px solid #000;
            padding: 0.1em;
        }

        select {
            margin-right: 10px;
        }

        input, .inputIframe, select {
            display: block;
            margin-bottom: 10px;
        }

        input {
            width: 175px;
        }

        #paymentsubmit {
            float: right;
            width: auto;
            padding: 5px;
            margin-bottom: 0px;
            margin-right: 10px;
        }

        #errorOutput {
            text-align: center;
            color: #ff0000;
            display: block;
        } </style>
{% endblock %}

{% block payum_body %}
    {{ parent() }}

    <form name="paymentform" action="{{ actionUrl }}" method="post">
        <fieldset>
            <table>
                <tr>
                    <td>IBAN</td>
                    <td><input type="text" id="iban" name="iban"></td>
                </tr>
            </table>
            <div id="errorOutput"></div>
            <input id="paymentsubmit" type="button" value="Submit" onclick="check();">
        </fieldset>
    </form>
    <div id="paymentform"></div>
{% endblock %}

{% block payum_vendor_javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="https://secure.pay1.de/client-api/js/v1/payone_hosted_min.js"></script>
{% endblock %}

{% block payum_javascripts %}
    {{ parent() }}

    <script>
        {% autoescape 'js' %}
        var iframes = new Payone.ClientApi.HostedIFrames(config, request);
        function check() { // Function called by submitting PAY-button
            if (isValidIBANNumber(document.getElementById("iban").value)) {
                document.paymentform.submit();
            } else {
                console.log('INVLID');
            }
        }
        function isValidIBANNumber(input) {
            var CODE_LENGTHS = {
                AD: 24, AE: 23, AT: 20, AZ: 28, BA: 20, BE: 16, BG: 22, BH: 22, BR: 29,
                CH: 21, CR: 21, CY: 28, CZ: 24, DE: 22, DK: 18, DO: 28, EE: 20, ES: 24,
                FI: 18, FO: 18, FR: 27, GB: 22, GI: 23, GL: 18, GR: 27, GT: 28, HR: 21,
                HU: 28, IE: 22, IL: 23, IS: 26, IT: 27, JO: 30, KW: 30, KZ: 20, LB: 28,
                LI: 21, LT: 20, LU: 20, LV: 21, MC: 27, MD: 24, ME: 22, MK: 19, MR: 27,
                MT: 31, MU: 30, NL: 18, NO: 15, PK: 24, PL: 28, PS: 29, PT: 25, QA: 29,
                RO: 24, RS: 22, SA: 24, SE: 24, SI: 19, SK: 24, SM: 27, TN: 24, TR: 26
            };
            var iban = String(input).toUpperCase().replace(/[^A-Z0-9]/g, ''), // keep only alphanumeric characters
                code = iban.match(/^([A-Z]{2})(\d{2})([A-Z\d]+)$/), // match and capture (1) the country code, (2) the check digits, and (3) the rest
                digits;
            // check syntax and length
            if (!code || iban.length !== CODE_LENGTHS[code[1]]) {
                return false;
            }
            // rearrange country code and check digits, and convert chars to ints
            digits = (code[3] + code[1] + code[2]).replace(/[A-Z]/g, function (letter) {
                return letter.charCodeAt(0) - 55;
            });
            // final check
            return mod97(digits);
        }
        function mod97(string) {
            var checksum = string.slice(0, 2), fragment;
            for (var offset = 2; offset < string.length; offset += 7) {
                fragment = String(checksum) + string.substring(offset, offset + 7);
                checksum = parseInt(fragment, 10) % 97;
            }
            return checksum;
        }
        {% endautoescape %}
    </script>
{% endblock %}
